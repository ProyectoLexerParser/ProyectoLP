
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMA COMILLA ELIF ELSE EQUALS ESPACIO FALSE FLOAT IF IN LCORCH LPAREN NAME NUMBER PRINT RCORCH RPAREN TRUE TWOPOINTopt : assign\n                | print\n                | if\n                | elif\n                | else\n                | listaassign : var lista\n                | var string\n                | var float\n                | var number\n                | var boollista : LCORCH contenido RCORCHcontenido : items\n                    | items COMA contenidoitems : string\n                | number\n                | float\n                | bool\n                | listaprint : PRINT LPAREN string RPARENvar : text EQUALStext : NAMEstring : COMILLA text COMILLA bool : TRUE\n                | FALSEfloat : FLOATnumber : NUMBERsentencia : ESPACIO printif : IF LPAREN condicion RPAREN TWOPOINT\n                    | IF condicion TWOPOINTelif : ELIF LPAREN condicion RPAREN TWOPOINT\n                    | ELIF condicion TWOPOINTelse : ELSE TWOPOINTcondicion : string IN string\n                    | string IN lista\n                    | number IN string\n                    | bool IN lista\n                    | float IN lista'
    
_lr_action_items = {'PRINT':([0,],[9,]),'IF':([0,],[10,]),'ELIF':([0,],[11,]),'ELSE':([0,],[12,]),'LCORCH':([0,8,13,43,48,50,51,55,],[13,13,13,-21,13,13,13,13,]),'NAME':([0,21,],[15,15,]),'$end':([1,2,3,4,5,6,7,16,17,18,19,20,22,23,24,25,35,47,53,54,56,57,66,67,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-26,-27,-24,-25,-33,-30,-32,-12,-23,-20,-29,-31,]),'COMILLA':([8,10,11,13,15,26,27,33,43,44,48,49,55,],[21,21,21,21,-22,21,21,21,-21,56,21,21,21,]),'FLOAT':([8,10,11,13,27,33,43,55,],[22,22,22,22,22,22,-21,22,]),'NUMBER':([8,10,11,13,27,33,43,55,],[23,23,23,23,23,23,-21,23,]),'TRUE':([8,10,11,13,27,33,43,55,],[24,24,24,24,24,24,-21,24,]),'FALSE':([8,10,11,13,27,33,43,55,],[25,25,25,25,25,25,-21,25,]),'LPAREN':([9,10,11,],[26,27,33,]),'TWOPOINT':([12,28,34,54,56,58,59,60,61,62,63,64,],[35,47,53,-12,-23,66,-34,-35,-36,-37,-38,67,]),'EQUALS':([14,15,],[43,-22,]),'IN':([22,23,24,25,29,30,31,32,56,],[-26,-27,-24,-25,48,49,50,51,-23,]),'COMA':([22,23,24,25,37,38,39,40,41,42,54,56,],[-26,-27,-24,-25,55,-15,-16,-17,-18,-19,-12,-23,]),'RCORCH':([22,23,24,25,36,37,38,39,40,41,42,54,56,65,],[-26,-27,-24,-25,54,-13,-15,-16,-17,-18,-19,-12,-23,-14,]),'RPAREN':([45,46,52,54,56,59,60,61,62,63,],[57,58,64,-12,-23,-34,-35,-36,-37,-38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'opt':([0,],[1,]),'assign':([0,],[2,]),'print':([0,],[3,]),'if':([0,],[4,]),'elif':([0,],[5,]),'else':([0,],[6,]),'lista':([0,8,13,48,50,51,55,],[7,16,42,60,62,63,42,]),'var':([0,],[8,]),'text':([0,21,],[14,44,]),'string':([8,10,11,13,26,27,33,48,49,55,],[17,29,29,38,45,29,29,59,61,38,]),'float':([8,10,11,13,27,33,55,],[18,32,32,40,32,32,40,]),'number':([8,10,11,13,27,33,55,],[19,30,30,39,30,30,39,]),'bool':([8,10,11,13,27,33,55,],[20,31,31,41,31,31,41,]),'condicion':([10,11,27,33,],[28,34,46,52,]),'contenido':([13,55,],[36,65,]),'items':([13,55,],[37,37,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> opt","S'",1,None,None,None),
  ('opt -> assign','opt',1,'p_option','Parser.py',8),
  ('opt -> print','opt',1,'p_option','Parser.py',9),
  ('opt -> if','opt',1,'p_option','Parser.py',10),
  ('opt -> elif','opt',1,'p_option','Parser.py',11),
  ('opt -> else','opt',1,'p_option','Parser.py',12),
  ('opt -> lista','opt',1,'p_option','Parser.py',13),
  ('assign -> var lista','assign',2,'p_assign','Parser.py',17),
  ('assign -> var string','assign',2,'p_assign','Parser.py',18),
  ('assign -> var float','assign',2,'p_assign','Parser.py',19),
  ('assign -> var number','assign',2,'p_assign','Parser.py',20),
  ('assign -> var bool','assign',2,'p_assign','Parser.py',21),
  ('lista -> LCORCH contenido RCORCH','lista',3,'p_lista','Parser.py',25),
  ('contenido -> items','contenido',1,'p_contenido','Parser.py',29),
  ('contenido -> items COMA contenido','contenido',3,'p_contenido','Parser.py',30),
  ('items -> string','items',1,'p_items','Parser.py',37),
  ('items -> number','items',1,'p_items','Parser.py',38),
  ('items -> float','items',1,'p_items','Parser.py',39),
  ('items -> bool','items',1,'p_items','Parser.py',40),
  ('items -> lista','items',1,'p_items','Parser.py',41),
  ('print -> PRINT LPAREN string RPAREN','print',4,'p_print','Parser.py',45),
  ('var -> text EQUALS','var',2,'p_var','Parser.py',49),
  ('text -> NAME','text',1,'p_text','Parser.py',53),
  ('string -> COMILLA text COMILLA','string',3,'p_string','Parser.py',57),
  ('bool -> TRUE','bool',1,'p_bool','Parser.py',61),
  ('bool -> FALSE','bool',1,'p_bool','Parser.py',62),
  ('float -> FLOAT','float',1,'p_float','Parser.py',66),
  ('number -> NUMBER','number',1,'p_number','Parser.py',70),
  ('sentencia -> ESPACIO print','sentencia',2,'p_sentencia','Parser.py',76),
  ('if -> IF LPAREN condicion RPAREN TWOPOINT','if',5,'p_if','Parser.py',80),
  ('if -> IF condicion TWOPOINT','if',3,'p_if','Parser.py',81),
  ('elif -> ELIF LPAREN condicion RPAREN TWOPOINT','elif',5,'p_elif','Parser.py',85),
  ('elif -> ELIF condicion TWOPOINT','elif',3,'p_elif','Parser.py',86),
  ('else -> ELSE TWOPOINT','else',2,'p_else','Parser.py',90),
  ('condicion -> string IN string','condicion',3,'p_condicion','Parser.py',94),
  ('condicion -> string IN lista','condicion',3,'p_condicion','Parser.py',95),
  ('condicion -> number IN string','condicion',3,'p_condicion','Parser.py',96),
  ('condicion -> bool IN lista','condicion',3,'p_condicion','Parser.py',97),
  ('condicion -> float IN lista','condicion',3,'p_condicion','Parser.py',98),
]
