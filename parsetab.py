
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMA COMILLA DLLAVE ELIF ELSE EQUALS ESPACIO FALSE FLOAT FOR IF ILLAVE IN INPUT ITEMS LCORCH LPAREN NAME NUMBER POINT PRINT RCORCH RPAREN TRUE TWOPOINTopt : assign\n            | print\n            | if\n            | elif\n            | else\n            | for\n            | listaassign : var lista\n            | var string\n            | var float\n            | var number\n            | var bool\n            | var diccionario\n            | var input input : INPUT LPAREN string RPARENdiccionario : ILLAVE info DLLAVE info : keys TWOPOINT items\n            | keys TWOPOINT items COMA infokeys : string\n            | number\n            | floatlista : LCORCH contenido RCORCHcontenido : items\n                | items COMA contenidoitems : string\n            | number\n            | float\n            | bool\n            | listaprint : PRINT LPAREN string RPARENvar : text EQUALStext : NAMEstring : COMILLA text COMILLA bool : TRUE\n            | FALSEfloat : FLOATnumber : NUMBERsentencia : ESPACIO printfor : FOR LPAREN condicionfor RPAREN TWOPOINT\n            | FOR condicionfor TWOPOINTcondicionfor : NAME COMA NAME IN funcionitems funcionitems : NAME POINT ITEMS LPAREN RPARENif : IF LPAREN condicion RPAREN TWOPOINT\n                | IF condicion TWOPOINTelif : ELIF LPAREN condicion RPAREN TWOPOINT\n                | ELIF condicion TWOPOINTelse : ELSE TWOPOINTcondicion : string IN string\n                | NAME IN lista\n                | NAME IN string\n                | string IN lista\n                | number IN string\n                | bool IN lista\n                | float IN lista\n                | NAME IN NAME'
    
_lr_action_items = {'PRINT':([0,],[10,]),'IF':([0,],[11,]),'ELIF':([0,],[12,]),'ELSE':([0,],[13,]),'FOR':([0,],[14,]),'LCORCH':([0,9,15,53,64,65,67,68,75,78,],[15,15,15,-31,15,15,15,15,15,15,]),'NAME':([0,11,12,14,25,33,40,43,65,73,99,],[17,36,36,45,17,36,36,45,84,92,101,]),'$end':([1,2,3,4,5,6,7,8,18,19,20,21,22,23,24,26,27,28,29,42,63,70,72,74,76,77,80,95,96,97,98,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-36,-37,-34,-35,-47,-44,-46,-40,-22,-33,-16,-30,-15,-43,-45,-39,]),'COMILLA':([9,11,12,15,17,30,32,33,40,53,54,60,64,65,66,75,78,100,],[25,25,25,25,-32,25,25,25,25,-31,76,25,25,25,25,25,25,25,]),'FLOAT':([9,11,12,15,30,33,40,53,75,78,100,],[26,26,26,26,26,26,26,-31,26,26,26,]),'NUMBER':([9,11,12,15,30,33,40,53,75,78,100,],[27,27,27,27,27,27,27,-31,27,27,27,]),'TRUE':([9,11,12,15,33,40,53,75,78,],[28,28,28,28,28,28,-31,28,28,]),'FALSE':([9,11,12,15,33,40,53,75,78,],[29,29,29,29,29,29,-31,29,29,]),'ILLAVE':([9,53,],[30,-31,]),'INPUT':([9,53,],[31,-31,]),'LPAREN':([10,11,12,14,31,105,],[32,33,40,43,60,106,]),'TWOPOINT':([13,26,27,34,41,44,56,57,58,59,74,76,81,82,83,84,85,86,87,88,89,90,91,102,107,],[42,-36,-37,63,70,72,78,-19,-20,-21,-22,-33,96,-48,-51,-55,-49,-50,-52,-53,-54,97,98,-41,-42,]),'EQUALS':([16,17,],[53,-32,]),'IN':([26,27,28,29,35,36,37,38,39,76,92,],[-36,-37,-34,-35,64,65,66,67,68,-33,99,]),'COMA':([26,27,28,29,45,47,48,49,50,51,52,74,76,94,],[-36,-37,-34,-35,73,75,-25,-26,-27,-28,-29,-22,-33,100,]),'RCORCH':([26,27,28,29,46,47,48,49,50,51,52,74,76,93,],[-36,-37,-34,-35,74,-23,-25,-26,-27,-28,-29,-22,-33,-24,]),'DLLAVE':([26,27,28,29,48,49,50,51,52,55,74,76,94,103,],[-36,-37,-34,-35,-25,-26,-27,-28,-29,77,-22,-33,-17,-18,]),'RPAREN':([61,62,69,71,74,76,79,82,83,84,85,86,87,88,89,102,106,107,],[80,81,90,91,-22,-33,95,-48,-51,-55,-49,-50,-52,-53,-54,-41,107,-42,]),'POINT':([101,],[104,]),'ITEMS':([104,],[105,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'opt':([0,],[1,]),'assign':([0,],[2,]),'print':([0,],[3,]),'if':([0,],[4,]),'elif':([0,],[5,]),'else':([0,],[6,]),'for':([0,],[7,]),'lista':([0,9,15,64,65,67,68,75,78,],[8,18,52,83,85,88,89,52,52,]),'var':([0,],[9,]),'text':([0,25,],[16,54,]),'string':([9,11,12,15,30,32,33,40,60,64,65,66,75,78,100,],[19,35,35,48,57,61,35,35,79,82,86,87,48,48,57,]),'float':([9,11,12,15,30,33,40,75,78,100,],[20,39,39,50,59,39,39,50,50,59,]),'number':([9,11,12,15,30,33,40,75,78,100,],[21,37,37,49,58,37,37,49,49,58,]),'bool':([9,11,12,15,33,40,75,78,],[22,38,38,51,38,38,51,51,]),'diccionario':([9,],[23,]),'input':([9,],[24,]),'condicion':([11,12,33,40,],[34,41,62,69,]),'condicionfor':([14,43,],[44,71,]),'contenido':([15,75,],[46,93,]),'items':([15,75,78,],[47,47,94,]),'info':([30,100,],[55,103,]),'keys':([30,100,],[56,56,]),'funcionitems':([99,],[102,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> opt","S'",1,None,None,None),
  ('opt -> assign','opt',1,'p_option','prueba.py',91),
  ('opt -> print','opt',1,'p_option','prueba.py',92),
  ('opt -> if','opt',1,'p_option','prueba.py',93),
  ('opt -> elif','opt',1,'p_option','prueba.py',94),
  ('opt -> else','opt',1,'p_option','prueba.py',95),
  ('opt -> for','opt',1,'p_option','prueba.py',96),
  ('opt -> lista','opt',1,'p_option','prueba.py',97),
  ('assign -> var lista','assign',2,'p_assign','prueba.py',101),
  ('assign -> var string','assign',2,'p_assign','prueba.py',102),
  ('assign -> var float','assign',2,'p_assign','prueba.py',103),
  ('assign -> var number','assign',2,'p_assign','prueba.py',104),
  ('assign -> var bool','assign',2,'p_assign','prueba.py',105),
  ('assign -> var diccionario','assign',2,'p_assign','prueba.py',106),
  ('assign -> var input','assign',2,'p_assign','prueba.py',107),
  ('input -> INPUT LPAREN string RPAREN','input',4,'p_input','prueba.py',111),
  ('diccionario -> ILLAVE info DLLAVE','diccionario',3,'p_diccionario','prueba.py',115),
  ('info -> keys TWOPOINT items','info',3,'p_info','prueba.py',119),
  ('info -> keys TWOPOINT items COMA info','info',5,'p_info','prueba.py',120),
  ('keys -> string','keys',1,'p_keys','prueba.py',127),
  ('keys -> number','keys',1,'p_keys','prueba.py',128),
  ('keys -> float','keys',1,'p_keys','prueba.py',129),
  ('lista -> LCORCH contenido RCORCH','lista',3,'p_lista','prueba.py',133),
  ('contenido -> items','contenido',1,'p_contenido','prueba.py',137),
  ('contenido -> items COMA contenido','contenido',3,'p_contenido','prueba.py',138),
  ('items -> string','items',1,'p_items','prueba.py',145),
  ('items -> number','items',1,'p_items','prueba.py',146),
  ('items -> float','items',1,'p_items','prueba.py',147),
  ('items -> bool','items',1,'p_items','prueba.py',148),
  ('items -> lista','items',1,'p_items','prueba.py',149),
  ('print -> PRINT LPAREN string RPAREN','print',4,'p_print','prueba.py',153),
  ('var -> text EQUALS','var',2,'p_var','prueba.py',157),
  ('text -> NAME','text',1,'p_text','prueba.py',162),
  ('string -> COMILLA text COMILLA','string',3,'p_string','prueba.py',166),
  ('bool -> TRUE','bool',1,'p_bool','prueba.py',170),
  ('bool -> FALSE','bool',1,'p_bool','prueba.py',171),
  ('float -> FLOAT','float',1,'p_float','prueba.py',175),
  ('number -> NUMBER','number',1,'p_number','prueba.py',179),
  ('sentencia -> ESPACIO print','sentencia',2,'p_sentencia','prueba.py',185),
  ('for -> FOR LPAREN condicionfor RPAREN TWOPOINT','for',5,'p_for','prueba.py',189),
  ('for -> FOR condicionfor TWOPOINT','for',3,'p_for','prueba.py',190),
  ('condicionfor -> NAME COMA NAME IN funcionitems','condicionfor',5,'p_condicionfor','prueba.py',197),
  ('funcionitems -> NAME POINT ITEMS LPAREN RPAREN','funcionitems',5,'p_funcionitems','prueba.py',203),
  ('if -> IF LPAREN condicion RPAREN TWOPOINT','if',5,'p_if','prueba.py',207),
  ('if -> IF condicion TWOPOINT','if',3,'p_if','prueba.py',208),
  ('elif -> ELIF LPAREN condicion RPAREN TWOPOINT','elif',5,'p_elif','prueba.py',215),
  ('elif -> ELIF condicion TWOPOINT','elif',3,'p_elif','prueba.py',216),
  ('else -> ELSE TWOPOINT','else',2,'p_else','prueba.py',223),
  ('condicion -> string IN string','condicion',3,'p_condicion','prueba.py',227),
  ('condicion -> NAME IN lista','condicion',3,'p_condicion','prueba.py',228),
  ('condicion -> NAME IN string','condicion',3,'p_condicion','prueba.py',229),
  ('condicion -> string IN lista','condicion',3,'p_condicion','prueba.py',230),
  ('condicion -> number IN string','condicion',3,'p_condicion','prueba.py',231),
  ('condicion -> bool IN lista','condicion',3,'p_condicion','prueba.py',232),
  ('condicion -> float IN lista','condicion',3,'p_condicion','prueba.py',233),
  ('condicion -> NAME IN NAME','condicion',3,'p_condicion','prueba.py',234),
]
